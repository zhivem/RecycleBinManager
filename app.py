import ctypes
import sys
import os
import autostart
from pathlib import Path
from PyQt6.QtWidgets import (
    QApplication,
    QSystemTrayIcon,
    QMenu,
)
from PyQt6.QtGui import QAction, QActionGroup, QIcon
from PyQt6.QtCore import QTimer, QSettings
from toggle_recycle_bin import toggle_show_recycle_bin, is_recycle_bin_visible
from icon_manager import IconManager 

class SHQUERYRBINFO(ctypes.Structure):
    _fields_ = [
        ("cbSize", ctypes.c_ulong),
        ("i64Size", ctypes.c_int64),
        ("i64NumItems", ctypes.c_int64),
    ]

CSIDL_BITBUCKET = 0x000a

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –Ω–∞—Å—Ç—Ä–æ–µ–∫
settings = QSettings("RecycleBinManager", "RecycleManager")
icon_manager = IconManager(settings)

def show_notification(title, message, icon_name=None, is_main=True):
    """
    –û—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —Å–∏—Å—Ç–µ–º–Ω–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —Å —É–∫–∞–∑–∞–Ω–Ω—ã–º–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏.
    """
    if settings.value("show_notifications", True, type=bool):
        if icon_name:
            if is_main:
                icon = icon_manager.load_main_icon(icon_name)
            else:
                icon = icon_manager.load_common_icon(icon_name)
        else:
            icon = QIcon()
        tray_icon.showMessage(title, message, icon, 5000)

def empty_recycle_bin():
    """
    –û—á–∏—â–∞–µ—Ç –∫–æ—Ä–∑–∏–Ω—É –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–µ.
    """
    try:
        SHEmptyRecycleBin = ctypes.windll.shell32.SHEmptyRecycleBinW
        flags = 0x01
        bin_path = ctypes.create_unicode_buffer(260)
        ctypes.windll.shell32.SHGetFolderPathW(0, CSIDL_BITBUCKET, 0, 0, bin_path)
        result = SHEmptyRecycleBin(None, bin_path.value, flags)

        if result == 0 or result == -2147418113:
            show_notification("–ö–æ—Ä–∑–∏–Ω–∞", "–ö–æ—Ä–∑–∏–Ω–∞ —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω–∞.", "recycle-empty.ico")
        else:
            show_notification(
                "–ö–æ—Ä–∑–∏–Ω–∞",
                f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã. –ö–æ–¥ –æ—à–∏–±–∫–∏: {result}",
                "recycle-full.ico",
            )

        update_icon()
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—á–∏—Å—Ç–∫–µ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
        show_notification("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É: {e}", "recycle-full.ico")

def open_recycle_bin():
    """
    –û—Ç–∫—Ä—ã–≤–∞–µ—Ç –æ–∫–Ω–æ –∫–æ—Ä–∑–∏–Ω—ã.
    """
    try:
        os.startfile("shell:RecycleBinFolder")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–∫—Ä—ã—Ç–∏–∏ –∫–æ—Ä–∑–∏–Ω—ã: {e}")
        show_notification("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É: {e}", "recycle-full.ico")

def exit_program():
    """
    –ó–∞–≤–µ—Ä—à–∞–µ—Ç —Ä–∞–±–æ—Ç—É –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    QApplication.quit()

def get_recycle_bin_info():
    """
    –ü–æ–ª—É—á–∞–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –∫–æ—Ä–∑–∏–Ω–µ: –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ –æ–±—â–∏–π —Ä–∞–∑–º–µ—Ä.
    """
    rbinfo = SHQUERYRBINFO()
    rbinfo.cbSize = ctypes.sizeof(SHQUERYRBINFO)
    result = ctypes.windll.shell32.SHQueryRecycleBinW(None, ctypes.byref(rbinfo))

    if result != 0:
        show_notification("–û—à–∏–±–∫–∞", "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∫–æ—Ä–∑–∏–Ω—ã.", "recycle-full.ico")
        return None, None

    num_items = rbinfo.i64NumItems
    total_size = rbinfo.i64Size

    return num_items, total_size

def format_size(bytes_size):
    """
    –ù–∞–º—É—Ç–∏–º –ø–µ—Ä–µ–≤–æ–¥ –≤ –ö–í, –ú–ë, GB, TB
    """
    if bytes_size < 1024:
        return f"{bytes_size} B"
    bytes_size /= 1024  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ KB
    if bytes_size < 1024:
        return f"{bytes_size:.1f} KB"
    bytes_size /= 1024  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ MB
    if bytes_size < 1024:
        return f"{bytes_size:.0f} MB"
    bytes_size /= 1024  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ GB
    if bytes_size < 1024:
        return f"{bytes_size:.0f} GB"
    bytes_size /= 1024  # –ü–µ—Ä–µ–≤–æ–¥–∏–º –≤ TB
    return f"{bytes_size:.2f} TB"

def update_icon():
    """
    –û–±–Ω–æ–≤–ª—è–µ—Ç –∏–∫–æ–Ω–∫—É –≤ —Å–∏—Å—Ç–µ–º–Ω–æ–º —Ç—Ä–µ–µ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–æ—Å—Ç–æ—è–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã.
    –¢–∞–∫–∂–µ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç—É–ª—Ç–∏–ø —Å –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏ —Ä–∞–∑–º–µ—Ä–æ–º.
    """
    num_items, total_size = get_recycle_bin_info()
    if num_items is None:
        # –ï—Å–ª–∏ –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π —Ç—É–ª—Ç–∏–ø
        tray_icon.setIcon(icon_manager.load_main_icon("recycle-full.ico"))
        tray_icon.setToolTip("–ú–µ–Ω–µ–¥–∂–µ—Ä –ö–æ—Ä–∑–∏–Ω—ã")
        return

    if num_items == 0:
        tray_icon.setIcon(icon_manager.load_main_icon("recycle-empty.ico"))
    else:
        tray_icon.setIcon(icon_manager.load_main_icon("recycle-full.ico"))

    # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º —Ä–∞–∑–º–µ—Ä –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
    size_str = format_size(total_size)
    tray_icon.setToolTip(f"–ú–µ–Ω–µ–¥–∂–µ—Ä –ö–æ—Ä–∑–∏–Ω—ã\n–≠–ª–µ–º–µ–Ω—Ç–æ–≤: {num_items}\n–ó–∞–Ω—è—Ç–æ: {size_str}")

def is_recycle_bin_empty():
    """
    –ü—Ä–æ–≤–µ—Ä—è–µ—Ç, –ø—É—Å—Ç–∞ –ª–∏ –∫–æ—Ä–∑–∏–Ω–∞.
    """
    num_items, _ = get_recycle_bin_info()
    if num_items is None:
        return False
    return num_items == 0

def periodic_update():
    """
    –ü–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–∫–æ–Ω–∫—É –∏ —Ç—É–ª—Ç–∏–ø –≤ —Ç—Ä–µ–µ.
    """
    update_icon()

def toggle_autostart(checked):
    """
    –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    if checked:
        success = autostart.enable_autostart()
        if success:
            show_notification("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –≤–∫–ª—é—á–µ–Ω.", "autostart-enabled.ico", is_main=False)
        else:
            show_notification("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", "–ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫.", "autostart-disabled.ico", is_main=False)
            autostart_action.setChecked(False)
    else:
        success = autostart.disable_autostart()
        if success:
            show_notification("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", "–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫ –æ—Ç–∫–ª—é—á–µ–Ω.", "autostart-disabled.ico", is_main=False)
        else:
            show_notification("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", "–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫.", "autostart-enabled.ico", is_main=False)
            autostart_action.setChecked(True)

def toggle_show_notifications(checked):
    """
    –í–∫–ª—é—á–∞–µ—Ç –∏–ª–∏ –æ—Ç–∫–ª—é—á–∞–µ—Ç –ø–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    settings.setValue("show_notifications", checked)
    if checked:
        show_notification("–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", "–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã.", "notifications-enabled.ico", is_main=False)

def initialize_autostart_menu():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –∞–≤—Ç–æ–∑–∞–ø—É—Å–∫–∞.
    """
    global autostart_action
    autostart_action = QAction("–ê–≤—Ç–æ–∑–∞–ø—É—Å–∫", checkable=True)
    autostart_action.setChecked(autostart.is_autostart_enabled())
    autostart_action.triggered.connect(toggle_autostart)
    tray_menu.addAction(autostart_action)

def initialize_notifications_menu():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.
    """
    global show_notifications_action
    show_notifications_action = QAction("–ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è", checkable=True)
    show_notifications_action.setChecked(settings.value("show_notifications", True, type=bool))
    show_notifications_action.triggered.connect(toggle_show_notifications)
    tray_menu.addAction(show_notifications_action)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    tray_menu.addSeparator()

def initialize_show_recycle_bin_menu():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∫–æ—Ä–∑–∏–Ω—ã –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ.
    """
    global show_recycle_bin_action
    is_visible = is_recycle_bin_visible()
    show_recycle_bin_action = QAction("–û—Ç–æ–±—Ä–∞–∂–∞—Ç—å üóëÔ∏è –Ω–∞ —Ä–∞–±–æ—á–µ–º —Å—Ç–æ–ª–µ", checkable=True)
    show_recycle_bin_action.setChecked(is_visible)
    show_recycle_bin_action.triggered.connect(lambda checked: toggle_show_recycle_bin(checked))
    tray_menu.addAction(show_recycle_bin_action)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    tray_menu.addSeparator()

def initialize_icon_set_menu():
    """
    –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –º–µ–Ω—é –≤—ã–±–æ—Ä–∞ –Ω–∞–±–æ—Ä–∞ –∏–∫–æ–Ω–æ–∫.
    """
    icon_set_menu = QMenu("–í—ã–±—Ä–∞—Ç—å –Ω–∞–±–æ—Ä –∏–∫–æ–Ω–æ–∫", tray_menu)
    available_icon_sets = icon_manager.get_available_icon_sets()

    # –°–æ–∑–¥–∞—ë–º QActionGroup –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–±–æ—Ä–æ–º –Ω–∞–±–æ—Ä–∞ –∏–∫–æ–Ω–æ–∫
    icon_set_group = QActionGroup(icon_set_menu)
    icon_set_group.setExclusive(True)

    current_set = icon_manager.get_current_icon_set()

    for icon_set in available_icon_sets:
        # –ó–∞–≥—Ä—É–∂–∞–µ–º –∏–∫–æ–Ω–∫—É 'full' –¥–ª—è –ø—Ä–µ–¥–ø—Ä–æ—Å–º–æ—Ç—Ä–∞
        icon_path = f"icons/icon_sets/{icon_set}/recycle-full.ico"
        try:
            icon = QIcon(icon_manager.resource_path(icon_path))
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ –∏–∫–æ–Ω–∫–∏ –¥–ª—è –Ω–∞–±–æ—Ä–∞ '{icon_set}': {e}")
            icon = QIcon()

        # –°–æ–∑–¥–∞—ë–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–π QAction –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –Ω–∞–±–æ—Ä–∞ –∏–∫–æ–Ω–æ–∫
        action = QAction(icon_set, icon=icon, checkable=True, parent=icon_set_group)
        action.setData(icon_set)  # –°–æ—Ö—Ä–∞–Ω—è–µ–º –∏–º—è –Ω–∞–±–æ—Ä–∞ –∏–∫–æ–Ω–æ–∫ –≤ –¥–∞–Ω–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏—è

        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –∫–∞–∫ –æ—Ç–º–µ—á–µ–Ω–Ω–æ–µ, –µ—Å–ª–∏ —ç—Ç–æ —Ç–µ–∫—É—â–∏–π –Ω–∞–±–æ—Ä
        if icon_set == current_set:
            action.setChecked(True)

        # –ü–æ–¥–∫–ª—é—á–∞–µ–º —Å–ª–æ—Ç –¥–ª—è —É—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–±–æ—Ä–∞ –∏–∫–æ–Ω–æ–∫ –ø—Ä–∏ –≤—ã–±–æ—Ä–µ
        action.triggered.connect(lambda checked, set_name=icon_set: set_icon_set(set_name))

        # –î–æ–±–∞–≤–ª—è–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –≤ –≥—Ä—É–ø–ø—É –∏ –º–µ–Ω—é
        icon_set_group.addAction(action)
        icon_set_menu.addAction(action)

    tray_menu.addMenu(icon_set_menu)

def set_icon_set(set_name):
    """
    –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç –≤—ã–±—Ä–∞–Ω–Ω—ã–π –Ω–∞–±–æ—Ä –∏–∫–æ–Ω–æ–∫ –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å.
    """
    icon_manager.set_icon_set(set_name)
    update_icon()
    show_notification("–ù–∞–±–æ—Ä –∏–∫–æ–Ω–æ–∫", f"–í—ã–±—Ä–∞–Ω –Ω–∞–±–æ—Ä –∏–∫–æ–Ω–æ–∫: {set_name}")

def on_tray_icon_activated(reason):
    """
    –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞–∫—Ç–∏–≤–∞—Ü–∏—é –∏–∫–æ–Ω–∫–∏ –≤ —Ç—Ä–µ–µ (–Ω–∞–ø—Ä–∏–º–µ—Ä, –¥–≤–æ–π–Ω–æ–π –∫–ª–∏–∫).
    """
    if reason == QSystemTrayIcon.ActivationReason.DoubleClick:
        open_recycle_bin()

if __name__ == "__main__":
    print(f"–¢–µ–∫—É—â–∞—è —Ä–∞–±–æ—á–∞—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {Path.cwd()}")

    if os.name != 'nt':
        print("–≠—Ç–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞ Windows.")
        sys.exit(1)

    try:
        icon_manager.verify_icons()
    except FileNotFoundError as e:
        print(e)
        sys.exit(1)

    app = QApplication(sys.argv)

    # –°–æ–∑–¥–∞—ë–º —Å–∏—Å—Ç–µ–º–Ω—ã–π —Ç—Ä–µ–π-–∏–∫–æ–Ω–∫—É
    tray_icon = QSystemTrayIcon()
    tray_icon.setIcon(icon_manager.load_main_icon("recycle-empty.ico"))

    # –°–æ–∑–¥–∞—ë–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–æ–µ –º–µ–Ω—é –¥–ª—è —Ç—Ä–µ—è
    tray_menu = QMenu()
    open_action = QAction("–û—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–∑–∏–Ω—É", triggered=open_recycle_bin)
    empty_action = QAction("–û—á–∏—Å—Ç–∏—Ç—å –∫–æ—Ä–∑–∏–Ω—É", triggered=empty_recycle_bin)
    exit_action = QAction("–í—ã—Ö–æ–¥", triggered=exit_program)

    tray_menu.addAction(open_action)
    tray_menu.addAction(empty_action)

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–æ—Å–ª–µ –æ—Å–Ω–æ–≤–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
    tray_menu.addSeparator()

    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–µ –ø—É–Ω–∫—Ç—ã –º–µ–Ω—é
    initialize_autostart_menu()
    initialize_notifications_menu()
    initialize_show_recycle_bin_menu()
    initialize_icon_set_menu()

    # –î–æ–±–∞–≤–ª—è–µ–º —Ä–∞–∑–¥–µ–ª–∏—Ç–µ–ª—å –ø–µ—Ä–µ–¥ –≤—ã—Ö–æ–¥–æ–º
    tray_menu.addSeparator()
    tray_menu.addAction(exit_action)

    tray_icon.setContextMenu(tray_menu)
    tray_icon.setToolTip("–ú–µ–Ω–µ–¥–∂–µ—Ä –ö–æ—Ä–∑–∏–Ω—ã")
    tray_icon.show()

    tray_icon.activated.connect(on_tray_icon_activated)

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–∞–π–º–µ—Ä –¥–ª—è –ø–µ—Ä–∏–æ–¥–∏—á–µ—Å–∫–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏–∫–æ–Ω–∫–∏ –∏ —Ç—É–ª—Ç–∏–ø–∞
    timer = QTimer()
    timer.timeout.connect(periodic_update)
    timer.start(1000)

    sys.exit(app.exec())
